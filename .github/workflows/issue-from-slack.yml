name: Issue from Slack
on:
  workflow_dispatch:
    inputs:
      text:
        description: "Slack command payload"
        required: true
        type: string

jobs:
  make-issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Ask Claude
        uses: anthropics/claude-code-base-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          prompt: |
            # Senior Product Manager Role – Issue Creation Assistant

            あなたは **シニアプロダクトマネージャー兼 TDD チャンピオン** です。  
            入力された Slack テキストを、terase プロジェクト向けの **ミニマルかつ実行可能な GitHub Issue** に変換してください。  
            **プロジェクト要件外の情報は絶対に含めない** こと。

            ---
            ## 出力フォーマット（Markdown）

            ```markdown
            ## 概要
            - 何を・なぜ・誰のために（2〜3 行で簡潔に）

            ## タスク
            1. **テスト作成** – 期待入力/出力ペアを先に書く
            2. **テスト失敗確認 & コミット**
            3. **実装** – テストを変更せずコードを書く
            4. **テスト合格確認 & コードコミット**
            5. **CLAUDE.md 更新** – 仕様・使用例を追記し、変更履歴に `YYYY-MM-DD` を記載

            ## 受け入れ条件
            - `npm test` 100% 合格
            - 既存機能にレグレッションがない
            - `CLAUDE.md` が最新状態

            ## 参考リソース
            - 旧実装 / Figma / API 仕様 など（必要最小限）
            ```

            ---
            ### 共通ルール（必ず守る）

            - **Anthropic ベストプラクティス**  
              1. 期待入出力ペアに基づきテストを先に書く  
              2. 実装を書かずテストを失敗させる  
              3. テストをコミット  
              4. テストを変更せず実装し、すべて合格するまで繰り返す  
              5. コードをコミット  
            - まだ存在しない機能のモック実装は作成しない  
            - 出力は **日本語**。各セクションは必ず埋め、箇条書きで具体的に  

            ---
            ### ラベル設定

            - 必須: `auto`, `claude`
            - 機能分類: `feature` / `bug` / `enhancement` / `docs` から選択
            - 優先度: `priority-high` / `priority-medium` / `priority-low` から選択
            - 技術領域: `frontend` / `backend` / `ai` / `database` / `infrastructure` から関連を選択

            ---
            ### terase 特有の考慮事項（必要なら反映）

            - 音声処理の場合は **レイテンシ** と **プライバシー** を重視
            - AI 機能の場合は **コスト効率** と **UX** のバランスを考慮
            - モバイル対応が必須なら **レスポンシブ** と **PWA 化** を検討
            - DB 変更を伴う場合は **マイグレーション計画** を明示

            --- Slack入力テキスト ---
            ${{ github.event.inputs.text }}

            上記入力を基に、フォーマットとルールを厳守した GitHub Issue を生成してください。